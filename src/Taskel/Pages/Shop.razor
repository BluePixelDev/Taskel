@page "/shop";
@using System.Security.Claims
@using TaskelDB.DAO;
@using Taskel.Authentication;

@inject NavigationManager NavManager;

<div class="margin-top-medium">
    <h1 class="text-align-center">Shop</h1>

    <div class="shop-packages" @onclick="() => BuyCredits(100)">
        <div class="shop-package">
            <h1 class="text-align-center">Small</h1>
            <p>100 K</p>
            <p>50 Kč</p>
        </div>

        <div class="shop-package" @onclick="() => BuyCredits(500)">
            <h1 class="text-align-center">Medium</h1>
            <p>500 K</p>
            <p>250 Kč</p>
        </div>

        <div class="shop-package" @onclick="() => BuyCredits(1000)">
            <h1 class="text-align-center">Big</h1>
            <p>1000 K</p>
            <p>500 Kč</p>
        </div>
    </div>

</div>

@code {
    private int userID;
    [CascadingParameter] private Task<AuthenticationState>? authenticationState { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (authenticationState != null)
        {
            var authState = await authenticationState;
            if (authState.User?.Identity?.IsAuthenticated ?? false)
            {
                var userIdClaim = authState.User?.FindFirst(ClaimTypes.NameIdentifier);
                userID = Convert.ToInt32(userIdClaim?.Value);
            }
            else
            {
                NavManager.NavigateTo("/signup");
            }
        }
    }

    private void BuyCredits(int amount)
    {
        TransactionDAO dao = new();
        dao.AddCreditsToUser(userID, -1, amount);
        NavManager.Refresh();
    }
}
